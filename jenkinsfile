pipeline {
  agent any 
  stages { 
   stage ('compile') {
      steps {
        sh mvn clean compile
      }
    }
   stage('Test') {
      steps {
        echo 'Testing...'
        snykSecurity(
          snykInstallation: 'snyk',
          snykTokenId: 'snyktoken'
        )
      }
    }
    stage ('SAST') {
      steps {
        withSonarQubeEnv('SonarQube') {
          sh 'mvn package'
          sh 'mvn sonar:sonar'
          sh 'cat target/sonar/report-task.txt'
        }
      }
   }
   stage ('Build') {
     steps {
         sh 'mvn clean package'
       }
   }
   stage ('Deploy-To-Tomcat') {
     steps {
       sshagent(['tomcat']) {
         sh 'scp -o StrictHostKeyChecking=no target/*.war ubuntu@:3.108.223.2/prod/apache-tomcat-9.0.65/webapps/webapp-project.war'
              }      
           }       
    }
    
   stage ('DAST') {
     steps {
       sshagent(['zap']) {
         sh 'ssh -o  StrictHostKeyChecking=no ubuntu@34.238.83.145 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://3.108.223.2:8080/webapp-project/" || true'
        }
      }
    }
  }
}
  
